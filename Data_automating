/////////////////////////////////////Pseuduo Code/////////////////////////////////////
// Set the constant API_KEY to the API key for authentication.

// 1.)Import the fs module for file system operations.

// Create an array called prompts containing objects with prompts and corresponding filenames.
// Define an asynchronous function named generateCSVFiles to generate CSV files.
// Iterate over each object in the prompts array using a loop.

// For each prompt and filename, do the following:
// a. Prepare the API request options with the prompt, API key, and other parameters.
// b. Send a POST request to the OpenAI API with the options.
// c. Parse the response from the API into JSON format.
// d. Check if the API response contains choices.
// e. If choices exist, retrieve the content of the first choice.
// f. Write the content to a file with the specified filename.
// g. If there is an error writing the file, log the error.
// h. If the file is written successfully, log a success message.
// i. If no choices are found in the API response, log an error message.
// j. If there is an error during the API request, log the error.
// Call the generateCSVFiles function to start the process of generating CSV files
const API_KEY = "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";//API-key
const fs = require("fs");//import file module
const csv = require('csv-parser');
//making prompts as array of object and store it in variable called prompts
const prompts = [
  {
    prompt: "Generate the attendance sheet for 4 employees for June month 2023(total 30 days mark weekend(Saturday Sunday) '0') in csv format  with headers as Employee Name, Employee Id(EMP...),Date (DD-MM-YY), Time In(range 9AM-10AM), Time Out(range 5PM-10PM), Hours Worked(Time In+Time Out)",
    filename: "emp_att_june_attendance.csv",
  },
  {
    prompt: 
    "Generate Employee-leaves for 4 employees for june month in csv format and headers are Employee name,Emplyee Id(EMP...),leave type(), leave Duration,leave Status(Approved,NotApproved) take at lease 1 Approved or NotApproved and convert the table in to csv format.",
    filename: "emp_leave.csv",
  },
  {
    prompt: "Generate the holiday calendar for a corporate employee(India) for year 2023 conatain the headers Date(dd/mm/yy),Holiday name,Type(public) and convert it in to csv format." ,
    filename: "emp_holiday.csv",
  },
  {
    prompt:"Generate the employee designation sheet for 4 e in csv format which contain headers as Employee Name, Employee Id(EMP...),Designation,Billiable or Non-Billable. Designation should be Software Developer, Senior Software Developer,QA Engineer,DevOps Engineer. and take at least one employees for Billiable or Non Billiable randomly.",
    filename:"employee_designation.csv"
  },  
  {
    prompt:"Generate the Attendance -sheet for 4 employees for june month    in to csv format which contain  headers, Employee Name,Employee Id(EMP...),Total Working Day(Calculated),Total Working Hours(Calculated).excluding weekends, holidays, leaves and based on number of working days, each day 8 hours being working hours.",
    filename:"emp_result_june.csv"
  },
];

  
//making a asynchronous function generateCSVFiles where we call our api to get the response
async function generateCSVFiles() {
//for loop to iterate the prompts which we are store in varibale called prompts
    for (const { prompt, filename } of prompts) {
    const options = {
      method: "POST",
      headers: {
        Authorization: `Bearer ${API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        model: "gpt-3.5-turbo",//this parameter define the model of chatgpt
        messages: [
          {
            role: "user",
            content: prompt,
          },
        ],//this parameter define the format of our message 
        max_tokens: 3500,//this parameter will generate 3500 tokens including input and output token
        temperature: 0.2,//this parameter helps us to generate more appropriate answer(lower value will enhance its capacity)
      }),
    };
//making exception during api call
    try {
      const response = await fetch(
        "https://api.openai.com/v1/chat/completions",
        options
      ); const data = await response.json();// converting the response in json format
      console.log("Data through API:", data);           
     if (data.choices && data.choices.length > 0) {
        const content = data.choices[0].message.content;
        console.log("Generated content:", content);
        fs.writeFile(filename, content, (err) => {
          if (err) {
            console.error("Error writing file:", err);
          } else {
            console.log(`CSV file ${filename} saved successfully in your directory`);
          }
        });
      } else {
        console.error("No choices found in the API response");
      }
    } catch (error) {
      console.error("Error:", error);
    }
  }
}
generateCSVFiles();











